<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <properties>
        <dropwizard.version>0.7.1</dropwizard.version>
        <wlfxb.version>1.3.3</wlfxb.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <serviceUser>${serviceUser}</serviceUser>
        <serviceGroup>${serviceGroup}</serviceGroup>
    </properties>

    <dependencies>
        <dependency>
            <groupId>eu.clarin.weblicht</groupId>
            <artifactId>wlfxb</artifactId>
            <version>${wlfxb.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>3.4</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-gitexe</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${package}.NamedEntitiesApplication</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1-alpha-4</version>
                <extensions>true</extensions>
                <configuration>
                    <group>Applications/System</group>
                    <name>${project.artifactId}</name>
                    <release>${buildNumber}</release>
                    <needarch>noarch</needarch>
                    <targetOS>linux</targetOS>
                    <targetVendor>pc</targetVendor>
                    <mappings>
                        <mapping>
                            <directory>/usr/share/${project.artifactId}/</directory>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.artifactId}-${project.version}.jar</location>
                                    <destination>${project.artifactId}.jar</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/${project.artifactId}/</directory>
                            <filemode>700</filemode>
                            <username>${serviceUser}</username>
                            <groupname>${serviceGroup}</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/log/${project.artifactId}/</directory>
                            <filemode>700</filemode>
                            <username>${serviceUser}</username>
                            <groupname>${serviceGroup}</groupname>
                        </mapping>
                        <mapping>
                            <directory>/usr/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>src/assembly/bin/service.sh</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/init.d</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>src/assembly/init-scripts/redhat</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/default</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/assembly/conf/etc.default</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/clarind</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/assembly/conf/service-config.yaml</location>
                                    <destination>${project.artifactId}.yaml</destination>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <script>
                            /usr/bin/getent group ${serviceGroup} &gt; /dev/null || /usr/sbin/groupadd ${serviceGroup}
                            /usr/bin/getent passwd ${serviceUser} &gt; /dev/null || /usr/sbin/useradd -r -d /var/lib/${project.artifactId} -m -g ${serviceGroup} ${serviceUser}
                        </script>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <script>
                            chkconfig --add ${project.artifactId};
                            if [ $1 -eq 0 ]; then
                            /sbin/service ${project.artifactId} start
                            elif [ $1 -ge 1 ]; then
                            /sbin/service ${project.artifactId} restart
                            fi
                        </script>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <script>
                            if [ $1 -eq 0 ] ; then
                            /sbin/service ${project.artifactId} stop;chkconfig --del ${project.artifactId}
                            fi
                        </script>
                    </preremoveScriptlet>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <version>1.3</version>
                <configuration>
                    <dataSet>
                        <data>
                            <src>${project.build.directory}/${project.artifactId}-${project.version}.jar</src>
                            <type>file</type>
                            <dst>/usr/share/${project.artifactId}/${project.artifactId}.jar</dst>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/bin/service.sh</src>
                            <type>file</type>
                            <dst>/usr/bin/${project.artifactId}</dst>
                            <mapper>
                                <type>perm</type>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/init-scripts/ubuntu</src>
                            <dst>/etc/init.d/${project.artifactId}</dst>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/conf/service-config.yaml</src>
                            <dst>/etc/clarind/${project.artifactId}.yaml</dst>
                            <type>file</type>
                            <conffile>true</conffile>
                        </data>
                        <data>
                            <src>${project.basedir}/src/assembly/conf/etc.default</src>
                            <dst>/etc/default/${project.artifactId}</dst>
                            <type>file</type>
                            <conffile>true</conffile>
                        </data>
                        <data>
                            <type>template</type>
                            <paths>
                                <path>var/lib/${project.artifactId}</path>
                                <path>var/log/${project.artifactId}</path>
                            </paths>
                            <mapper>
                                <type>perm</type>
                                <user>${serviceUser}</user>
                                <group>${serviceGroup}</group>
                            </mapper>
                        </data>
                    </dataSet>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
